{"ast":null,"code":"var _jsxFileName = \"/Users/oliviasparks/Documents/portfolio/portfolio-site/src/Components/Header.js\",\n  _s = $RefreshSig$();\nimport { Link } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport navLinks from \"../assets/navLinks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Header = () => {\n  _s();\n  const [showFullName, setShowFullName] = useState(false);\n  const [navHover, setNavHover] = useState(0);\n\n  // const type = (label) => {\n\n  //     const [letters, setLetters] = useState(\"\");\n  //     const [index, setIndex] = useState(0);\n\n  //     if (index < label.length) {\n  //         setTimeout(() => {\n  //             setLetters(letters + word[index]);\n  //             setIndex(index +1);\n  //         }, 100)\n  // }\n\n  console.log(...\"word\");\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      className: \"name\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        onMouseEnter: () => setShowFullName(true),\n        onMouseLeave: () => setShowFullName(false),\n        children: \"os\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"sr-only\",\n        children: \"it's Olivia Sparks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), showFullName ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"full-name\",\n        onMouseEnter: () => setShowFullName(true),\n        onMouseLeave: () => setShowFullName(false),\n        children: \"it's olivia sparks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 33\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"contact-links\",\n        children: navLinks.map(link => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            onMouseEnter: () => setNavHover(link.id),\n            onMouseLeave: () => setNavHover(0),\n            style: navHover === link.id ? {\n              backgroundColor: `${link.color}`,\n              width: \"fit-content\",\n              paddingRight: \"10px\"\n            } : null,\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: link.link,\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"sr-only\",\n                children: link.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                className: link.i\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 37\n              }, this), navHover === link.id ? link.name : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 33\n            }, this)\n          }, link.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n_s(Header, \"laKbciR8l/ELHDpBIfr1BSugeng=\");\n_c = Header;\nexport default Header;\n\n//I'm really proud of the logic here! On hover, the label & changes the background color is updated to a unique color for each link. I'm using onMouseEnter&Leave for this logic, so it's not accessible for non-mouse users. I would love to learn a way to provide this feature to all sighted users, but for now I have a back-up hover/focus state to change the background of all items to pink on focus.\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["Link","useState","navLinks","jsxDEV","_jsxDEV","Header","_s","showFullName","setShowFullName","navHover","setNavHover","console","log","children","to","className","onMouseEnter","onMouseLeave","fileName","_jsxFileName","lineNumber","columnNumber","map","link","id","style","backgroundColor","color","width","paddingRight","name","i","_c","$RefreshReg$"],"sources":["/Users/oliviasparks/Documents/portfolio/portfolio-site/src/Components/Header.js"],"sourcesContent":["import { Link } from \"react-router-dom\";\nimport { useState } from \"react\";\n\nimport navLinks from \"../assets/navLinks\";\n\nconst Header = () => {\n    const [showFullName, setShowFullName] = useState(false);\n    const [navHover, setNavHover] = useState(0);\n\n\n    // const type = (label) => {\n\n    //     const [letters, setLetters] = useState(\"\");\n    //     const [index, setIndex] = useState(0);\n\n    //     if (index < label.length) {\n    //         setTimeout(() => {\n    //             setLetters(letters + word[index]);\n    //             setIndex(index +1);\n    //         }, 100)\n    // }\n\n    console.log(...\"word\")\n\n    return (\n        <header>\n            <Link to=\"/\" className=\"name\">\n                <h1\n                    onMouseEnter={() => setShowFullName(true)}\n                    onMouseLeave={() => setShowFullName(false)}>\n                    os\n                </h1>\n                <p className=\"sr-only\">it's Olivia Sparks</p>\n                {showFullName ? <p\n                    className=\"full-name\"\n                    onMouseEnter={() => setShowFullName(true)}\n                    onMouseLeave={() => setShowFullName(false)}>\n                    it's olivia sparks</p> : null}\n            </Link>\n            <nav>\n                <ul className=\"contact-links\">\n                    {navLinks.map((link) => {\n                        return (\n                            <li key={link.id}\n                                onMouseEnter={() => setNavHover(link.id)}\n                                onMouseLeave={() => setNavHover(0)}\n                                style={\n                                    navHover === link.id ? {\n                                        backgroundColor: `${link.color}`,\n                                        width: \"fit-content\",\n                                        paddingRight: \"10px\",\n                                        } : null}>\n                                <Link to={link.link}>\n                                    <p className=\"sr-only\">{link.name}</p>\n                                    <i className={link.i}></i>\n                                    {navHover === link.id ? link.name  : null}\n                                </Link>\n                            </li>\n                        )\n                    })}\n                </ul>\n            </nav>\n        </header>\n    );\n};\n\nexport default Header;\n\n//I'm really proud of the logic here! On hover, the label & changes the background color is updated to a unique color for each link. I'm using onMouseEnter&Leave for this logic, so it's not accessible for non-mouse users. I would love to learn a way to provide this feature to all sighted users, but for now I have a back-up hover/focus state to change the background of all items to pink on focus."],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}